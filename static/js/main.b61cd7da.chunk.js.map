{"version":3,"sources":["componentes/Header.js","context/CategoriasContext.js","context/EventosContext.js","componentes/Formulario.js","componentes/Evento.js","componentes/ListaEventos.js","App.js","serviceWorker.js","index.js"],"names":["Header","react_default","a","createElement","className","uk-margin","CategoriasContext","React","createContext","CategoriasConsumer","Consumer","CategoriasProvider","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","token","obtenerCategorias","asyncToGenerator","regenerator_default","mark","_callee","url","categorias","wrap","_context","prev","next","concat","axios","get","sent","setState","data","categories","stop","state","Provider","value","children","Component","EventosContext","EventosConsumer","EventosProvider","ordenar","obtenerEventos","_ref","busqueda","eventos","nombre","categoria","events","_x","apply","arguments","Formulario","obtenerDatosEvento","e","defineProperty","target","name","_this2","onSubmit","preventDefault","type","placeholder","onChange","defaultValue","map","key","id","data-uk-from-select","name_localized","Evento","evento","text","description","length","substr","logo","src","alt","rel","href","ListaEventos","uk-grid","console","log","componentes_Evento","App","context_EventosContext","context_CategoriasContext","componentes_Header","componentes_Formulario","componentes_ListaEventos","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b61cd7da.chunk.js","sourcesContent":["import React from 'react';\n\nconst Header = () => ( \n    <header className=\"uk-margin\" uk-margin=\"true\">\n        <h1 className=\"uk-text-center\">Eventos en React con EventBrite API</h1>\n    </header>\n);\n \nexport default Header;","import React, { Component } from 'react';\nimport axios from 'axios';\n\n// Crear el context\nconst CategoriasContext = React.createContext();\nexport const CategoriasConsumer = CategoriasContext.Consumer; \n\nclass CategoriasProvider extends Component {\n\n    token = 'DYJO2HJTF4OLVTOERLIY';\n\n    constructor(props){\n        super(props);\n        this.state = {\n            categorias: []\n        };\n    }\n\n    componentDidMount() {\n        this.obtenerCategorias();\n    }\n\n    obtenerCategorias = async () => {\n        let url = `https://www.eventbriteapi.com/v3/categories/?token=${this.token}&locale=es_ES`;\n\n        let categorias = await axios.get(url);\n\n        this.setState({\n            categorias: categorias.data.categories\n        })\n    }\n\n    render() {\n        return (\n            <CategoriasContext.Provider\n                value={{\n                    categorias: this.state.categorias\n                }}\n            >\n                {this.props.children}\n            </CategoriasContext.Provider>\n        );\n    }\n}\n\nexport default CategoriasProvider;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nconst EventosContext = React.createContext();\nexport const EventosConsumer = EventosContext.Consumer;\n\nclass EventosProvider extends Component {\n\n    token = 'DYJO2HJTF4OLVTOERLIY';\n    ordenar = 'date';\n\n    constructor(props){\n        super(props);\n        this.state = {\n            eventos: []\n        };\n    }\n\n    obtenerEventos  = async (busqueda) => {\n        let url = `https://www.eventbriteapi.com/v3/events/search/?q=${busqueda.nombre}&categories=${busqueda.categoria}&sort_by=${this.ordenar}&token=${this.token}&locale=es_ES`\n    \n        // consultar la API con la URL\n\n        const eventos = await axios(url);\n        // console.log(eventos.data.events);\n        this.setState({\n            eventos: eventos.data.events\n        })\n    }\n\n    render() {\n        return (\n            <EventosContext.Provider\n                value={{\n                    eventos: this.state.eventos,\n                    obtenerEventos: this.obtenerEventos\n                }}\n            >\n                {this.props.children}\n            </EventosContext.Provider>\n        );\n    }\n}\n\nexport default EventosProvider;","import React, { Component } from 'react';\n\nimport { CategoriasConsumer } from '../context/CategoriasContext';\nimport { EventosConsumer } from '../context/EventosContext';\n\nclass Formulario extends Component {\n    \n    constructor(props){\n        super(props);\n        this.state = {\n            nombre: '',\n            categoria: ''\n        };\n    }\n    \n    // si el usuario agrega un evento o categoria\n\n    obtenerDatosEvento = e => {\n        this.setState({\n            [e.target.name] : e.target.value\n        })\n    }\n\n    render() {\n        return (\n            <EventosConsumer>\n                {(value) => {\n                    // console.log(value)\n                    return(\n                        <form\n                            onSubmit={(e) => {\n                                e.preventDefault();\n                                value.obtenerEventos(this.state)\n                            }}\n                        >\n                        <fieldset className=\"uk-fieldset uk-margin\">\n                            <legend className=\"uk-legend uk-text-center\">\n                                Busca tu evento por Nombre o Categor√≠a\n                            </legend>\n                        </fieldset>\n    \n                        <div className=\"uk-column-1-3@m uk-margin\">\n                            <div className=\"uk-margin\" uk-margin=\"true\">\n                                <input name=\"nombre\" className=\"uk-input\" type=\"text\"\n                                placeholder=\"Nombre de Evento o Ciudad\"\n                                onChange={this.obtenerDatosEvento}/>\n                            </div>\n                            <div className=\"uk-margin\" uk-margin=\"true\">\n                                <select name=\"categoria\" className=\"uk-select\"\n                                onChange={this.obtenerDatosEvento}>\n                                    <option defaultValue>Seleccione una categoria</option>\n                                    <CategoriasConsumer>\n                                        {(value) => {\n                                            return(\n                                                value.categorias.map(categoria => (\n                                                    <option key={categoria.id} value={categoria.id} data-uk-from-select>\n                                                        {categoria.name_localized}\n                                                    </option>\n                                                ))\n                                            )\n                                        }}\n                                    </CategoriasConsumer>\n                                </select>\n                            </div>\n                            <div>\n                                <input type=\"submit\" className=\"uk-button uk-button-danger\"\n                                value=\"Buscar Eventos\"/>\n                            </div>\n                        </div>\n                    </form>\n                    )\n                }}\n            </EventosConsumer>\n        );\n    }\n}\n\nexport default Formulario;","import React from 'react';\n\nconst Evento = ({evento}) => {\n\n    // extraer el texto\n\n    let { text } = evento.description;\n    if (text) {\n        if (text.length > 250) {\n            text = text.substr(0, 250);            \n        }\n    } else {\n        text = null;\n    }\n\n    return (\n        <div>\n            <div className=\"uk-card uk-card-default\">\n                <div className=\"uk-card-media-top\">\n                    {evento.logo \n                        ? <img src={evento.logo.url} alt={evento.name}/>\n                        : null\n                    }\n                </div>\n                <div className=\"uk-card-body\">\n                    <h3 className=\"uk-card-title\">{evento.name.text}</h3>\n                    {text}\n                </div>\n                <div className=\"uk-card-footer\">\n                    <a target=\"_blank\" rel=\"noopener noreferrer\" href={evento.url} className=\"uk-button uk-button-secondary\">\n                        M√°s informaci√≥n\n                    </a>\n                </div>\n            </div>\n        </div>\n     );\n}\n \nexport default Evento;","import React from 'react';\nimport Evento from './Evento';\n\nimport { EventosConsumer } from '../context/EventosContext';\n\nconst ListaEventos = () => {\n    return ( \n        <div className=\"uk-child-width-1-3@m\" uk-grid=\"true\">\n            <EventosConsumer>\n                {(value) => {\n                    console.log(value);\n                    return value.eventos.map(evento => (\n                        <Evento\n                            key={evento.id}\n                            evento={evento}\n                        />\n                    ))\n                }}\n            </EventosConsumer>\n        </div>    \n     );\n}\n \nexport default ListaEventos;","import React from 'react';\nimport Header from './componentes/Header';\nimport Formulario from './componentes/Formulario';\nimport ListaEventos from './componentes/ListaEventos';\nimport CategoriasProvider from './context/CategoriasContext';\nimport EventosProvider from './context/EventosContext';\n\nfunction App() {\n  return (\n    <EventosProvider>\n      <CategoriasProvider>\n        <Header/>\n        <div className=\"uk-container\">\n          <Formulario/>\n          <ListaEventos/>\n        </div>\n      </CategoriasProvider>\n    </EventosProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}